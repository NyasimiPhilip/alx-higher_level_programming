# Code Testing for "add_integer"

# Import the function
from 0-add_integer import add_integer

# Test cases for the "add_integer" function

# Test 1: Adding two integers
assert add_integer(2, 1) == 3

# Test 2: Adding float with integer cast to the smaller int value
assert add_integer(3.2, 2) == 5

# Test 3: Adding int with str
try:
    add_integer("3", 4)
except TypeError as e:
    assert str(e) == "a must be an integer"

# Test 4: Adding str with int
try:
    add_integer(3, "4")
except TypeError as e:
    assert str(e) == "b must be an integer"

# Test 5: Adding None with int
try:
    add_integer(None, 4)
except TypeError as e:
    assert str(e) == "a must be an integer"

# Test 6: Adding just the first parameter as None
try:
    add_integer(None)
except TypeError as e:
    assert str(e) == "a must be an integer"

# Test 7: Adding negative numbers
assert add_integer(-3, -4) == -7

# Test 8: Adding negative float numbers
assert add_integer(-3.4, -4.6) == -7

# Test 9: Second argument as None
try:
    add_integer(-3.4, None)
except TypeError as e:
    assert str(e) == "b must be an integer"

# Test 10: Both arguments as strings
try:
    add_integer("-3.4", "3")
except TypeError as e:
    assert str(e) == "a must be an integer"

# Test 11: More than two arguments
try:
    add_integer(3, 234, 65)
except TypeError as e:
    assert str(e) == "add_integer() takes from 1 to 2 positional arguments but 3 were given"

# Test 12: No arguments
try:
    add_integer()
except TypeError as e:
    assert str(e) == "add_integer() missing 1 required positional argument: 'a'"

# Test 13: First argument as string
try:
    add_integer("heloo")
except TypeError as e:
    assert str(e) == "a must be an integer"

